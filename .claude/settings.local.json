{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(uv sync:*)",
      "Bash(uv venv:*)",
      "Bash(rm:*)",
      "Bash(cargo test)",
      "Bash(source:*)",
      "Bash(rustc:*)",
      "Bash(cargo --version)",
      "Bash(cargo test:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(python -m pytest python/tests/test_cli.py -v)",
      "Bash(python3:*)",
      "Bash(uv run:*)",
      "Bash(grep:*)",
      "Bash(cargo:*)",
      "Bash(uv init:*)",
      "Bash(python:*)",
      "Bash(uv add:*)",
      "Bash(ls:*)",
      "WebFetch(domain:docs.astral.sh)",
      "Bash(sed:*)",
      "Bash(timeout 600 cargo test test_model_registry_creation --package vocalize-core --lib)",
      "Bash(pip install:*)",
      "Bash(maturin develop:*)",
      "WebFetch(domain:ort.pyke.io)",
      "Bash(RUST_LOG=debug uv run python -m vocalize.cli speak \"Test\" --voice kokoro_en_us_f --output test.wav)",
      "Bash(curl:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:huggingface.co)",
      "Bash(RUST_LOG=debug uv run python test_download.py)",
      "Bash(HF_ENDPOINT=\"https://huggingface.co\" uv run maturin develop)",
      "Bash(HF_ENDPOINT=\"https://huggingface.co\" uv run python test_download.py)",
      "Bash(timeout 60 uv run:*)",
      "Bash(rg:*)",
      "Bash(ORT_DYLIB_PATH=/mnt/c/Users/iatiq/Documents/dev/vocalize/onnxruntime/lib/libonnxruntime.so uv run python debug_neural.py)",
      "Bash(ORT_DYLIB_PATH=/mnt/c/Users/iatiq/Documents/dev/vocalize/onnxruntime/onnxruntime-linux-x64-1.19.2/lib/libonnxruntime.so uv run python debug_neural.py)",
      "Bash(ORT_DYLIB_PATH=/mnt/c/Users/iatiq/Documents/dev/vocalize/onnxruntime/onnxruntime-linux-x64-1.22.0/lib/libonnxruntime.so uv run python debug_neural.py)",
      "WebFetch(domain:onnxruntime.ai)",
      "Bash(timeout:*)",
      "Bash(export:*)",
      "Bash(RUST_LOG=debug uv run python debug_neural.py)",
      "Bash(uv pip install:*)",
      "Bash(RUST_LOG=debug uv run python -c \"import vocalize.vocalize_python; print(''''Imported successfully''''); vocalize.vocalize_python.synthesize_neural(''''test'''', ''''kokoro_en_us_f'''')\")",
      "Bash(RUST_BACKTRACE=1 uv run python -c \"\nfrom vocalize import vocalize_python\naudio_samples = vocalize_python.synthesize_neural(''''test'''', ''''kokoro_en_us_f'''', 1.0, 0.0)\n\")",
      "Bash(wget:*)",
      "Bash(tar:*)",
      "Bash(RUST_LOG=debug uv run python -c \"\nfrom vocalize import vocalize_python\nprint(''''Testing with debug logging...'''')\ntry:\n    audio_samples = vocalize_python.synthesize_neural(''''test'''', ''''kokoro_en_us_f'''', 1.0, 0.0)\n    print(f''''Success: {len(audio_samples)} samples'''')\nexcept Exception as e:\n    print(f''''Error: {e}'''')\n\")",
      "Bash(RUST_LOG=debug uv run python -c \"\nfrom vocalize import vocalize_python\ntry:\n    samples = vocalize_python.synthesize_neural(''''test'''', ''''kokoro_en_us_f'''', 1.0, 0.0)\n    print(f''''Success: {len(samples)} samples'''')\nexcept Exception as e:\n    print(f''''Error: {e}'''')\n\")",
      "Bash(RUST_LOG=error uv run python -c \"\nfrom vocalize import vocalize_python\ntry:\n    samples = vocalize_python.synthesize_neural(''''test'''', ''''kokoro_en_us_f'''', 1.0, 0.0)\n    print(f''''Success: {len(samples)} samples'''')\nexcept Exception as e:\n    print(f''''Error: {e}'''')\n\")",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(CARGO_NET_RETRY=2 CARGO_HTTP_TIMEOUT=30 timeout 90s uv run maturin develop --release --jobs 1)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:gist.github.com)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(PYTHONPATH=/mnt/c/Users/iatiq/Documents/dev/vocalize python3 -c \"\nimport sys\nsys.path.insert(0, ''/mnt/c/Users/iatiq/Documents/dev/vocalize'')\n\nimport vocalize.vocalize_python as vocalize_python\nprint(''üß™ Testing 2025 Neural TTS Python Extension'')\nprint(''='' * 50)\n\n# Test neural synthesis\nprint(''üîä Testing synthesize_neural function...'')\ntry:\n    audio_data = vocalize_python.synthesize_neural(''Hello world 2025'', ''af_heart'', 1.0, 0.0)\n    print(f''‚úÖ Neural synthesis successful: {len(audio_data)} samples generated'')\n    \n    # Save the audio\n    vocalize_python.save_audio_neural(audio_data, ''/tmp/test_2025_neural.wav'', ''wav'')\n    print(''‚úÖ Audio saved to /tmp/test_2025_neural.wav'')\n    \nexcept Exception as e:\n    print(f''‚ùå Neural synthesis failed: {e}'')\n\n# Test voice listing\nprint(''\\nüéµ Testing list_neural_voices...'')\ntry:\n    voices = vocalize_python.list_neural_voices()\n    print(f''‚úÖ Found {len(voices)} neural voices:'')\n    for voice_id, name, gender, lang in voices[:5]:\n        print(f''   üì¢ {voice_id}: {name} ({gender}, {lang})'')\n        \nexcept Exception as e:\n    print(f''‚ùå Voice listing failed: {e}'')\n\nprint(''\\n‚úÖ 2025 Neural TTS Implementation: FULLY OPERATIONAL'')\n\")",
      "Bash(PYTHONPATH:*)",
      "Bash(cp:*)",
      "Bash(uv:*)",
      "Bash(.venv/bin/python:*)",
      "Bash(.venv/bin/vocalize:*)",
      "Bash(./simple_tts_test)",
      "Bash(touch:*)",
      "Bash(/mnt/c/Users/iatiq/Documents/dev/vocalize/.venv/bin/maturin develop --release)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(time uv run:*)",
      "Bash(OMP_NUM_THREADS=1 MKL_NUM_THREADS=1 ORT_DISABLE_SPINNING=1 OPENBLAS_NUM_THREADS=1 timeout 30 uv run vocalize speak \"Hello\" --voice bella --output test.wav)",
      "WebFetch(domain:crates.io)",
      "WebFetch(domain:plotly.com)",
      "WebFetch(domain:pymupdf.readthedocs.io)",
      "WebFetch(domain:artifex.com)",
      "Bash(git restore:*)",
      "WebFetch(domain:peps.python.org)",
      "Bash(echo $HOME)",
      "Bash(echo:*)",
      "Bash(cmd.exe:*)",
      "Bash(chmod:*)",
      "Bash(unzip:*)",
      "Bash(cat:*)",
      "WebFetch(domain:visualstudio.microsoft.com)",
      "Bash(clang:*)",
      "Bash(lld:*)",
      "Bash(maturin build:*)",
      "Bash(RUST_BACKTRACE=1 maturin build --release --target x86_64-pc-windows-msvc)",
      "Bash(7z:*)",
      "Bash(/mnt/c/Users/iatiq/Documents/dev/personal/vocalize/.venv/Scripts/delvewheel.exe show target/wheels/vocalize_python-0.1.0-cp38-abi3-win_amd64.whl)",
      "WebFetch(domain:pyo3.rs)",
      "Bash(./download_and_extract_vcredist_dlls.sh:*)",
      "Bash(cabextract:*)",
      "Bash(./test_extract_vcredist.sh:*)",
      "Bash(./test_simple_extract.sh:*)"
    ],
    "deny": []
  }
}