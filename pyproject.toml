[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "vocalize"
description = "High-performance text-to-speech synthesis library"
license = {text = "PolyForm-Noncommercial-1.0.0"}
authors = [
    {name = "Vocalize Contributors", email = "noreply@vocalize.ai"},
]
keywords = ["tts", "text-to-speech", "audio", "speech", "ai", "rust", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Free for non-commercial use",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
readme = "README.md"
dynamic = ["version"]
dependencies = [
    "sounddevice>=0.4.6",
    "numpy>=1.21.0",
    "huggingface-hub>=0.33.2",
    "maturin>=1.9.0",
    "onnx>=1.17.0",
    "onnxruntime-extensions>=0.14.0",
    "misaki>=0.9.4",
    "num2words>=0.5.14",
    "ttstokenizer>=1.1.0",
    "tinynumpy>=1.2.1",
]


[project.urls]
Homepage = "https://github.com/vocalize/vocalize"
Repository = "https://github.com/vocalize/vocalize"
Documentation = "https://docs.rs/vocalize"
"Bug Tracker" = "https://github.com/vocalize/vocalize/issues"

[project.scripts]
vocalize = "vocalize.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
    "pytest-benchmark>=4.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.0",
    "ruff>=0.1",
    "maturin>=1.7",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]
examples = [
    "jupyter>=1.0",
    "matplotlib>=3.5",
    "numpy>=1.21",
]

[tool.maturin]
module-name = "vocalize.vocalize_python"
manifest-path = "crates/vocalize-python/Cargo.toml"
strip = true

[tool.pytest.ini_options]
testpaths = ["vocalize/tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--asyncio-mode=auto"
]
markers = [
    "asyncio: marks tests as async",
    "slow: marks tests as slow running",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["vocalize"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[dependency-groups]
dev = [
    "maturin>=1.9.0",
]

